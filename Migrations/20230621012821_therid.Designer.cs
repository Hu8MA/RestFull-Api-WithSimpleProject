// <auto-generated />
using System;
using HomeBiuld.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HomeBiuld.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230621012821_therid")]
    partial class therid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomeBiuld.Model.Bad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("numberBody")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Bads");
                });

            modelBuilder.Entity("HomeBiuld.Model.Room", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");
                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<float>("size")
                        .HasColumnType("real");
 

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HomeBiuld.Model.Tv", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("name_model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("size")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Tvs");
                });

            modelBuilder.Entity("HomeBiuld.Model.Room", b =>
                {
                    b.HasOne("HomeBiuld.Model.Bad", "Bad")
                        .WithMany("Rooms")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeBiuld.Model.Tv", "Tv")
                        .WithOne("room")
                        .HasForeignKey("HomeBiuld.Model.Room", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bad");

                    b.Navigation("Tv");
                });

            modelBuilder.Entity("HomeBiuld.Model.Bad", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HomeBiuld.Model.Tv", b =>
                {
                    b.Navigation("room")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
